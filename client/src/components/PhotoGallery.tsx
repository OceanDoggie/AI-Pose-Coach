import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Camera, Download, Share2, Trash2, Calendar, Target } from 'lucide-react';\n\ninterface PhotoSession {\n  id: string;\n  timestamp: number;\n  poseId: string;\n  poseName: string;\n  score: number;\n  imageData: string;\n}\n\ninterface PhotoGalleryProps {\n  photos: PhotoSession[];\n  onDeletePhoto: (id: string) => void;\n  onRetakePhoto: (poseId: string) => void;\n}\n\nexport default function PhotoGallery({ photos, onDeletePhoto, onRetakePhoto }: PhotoGalleryProps) {\n  const [selectedPhoto, setSelectedPhoto] = useState<PhotoSession | null>(null);\n  \n  const downloadPhoto = (photo: PhotoSession) => {\n    const link = document.createElement('a');\n    link.href = photo.imageData;\n    link.download = `pose-coach-${photo.poseName.replace(/[^a-zA-Z0-9]/g, '_')}-${Date.now()}.jpg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    console.log('Photo downloaded:', photo.id);\n  };\n\n  const sharePhoto = async (photo: PhotoSession) => {\n    if (navigator.share) {\n      try {\n        // Convert data URL to blob for sharing\n        const response = await fetch(photo.imageData);\n        const blob = await response.blob();\n        const file = new File([blob], `pose-coach-${photo.id}.jpg`, { type: 'image/jpeg' });\n        \n        await navigator.share({\n          title: 'AI Pose Coach Photo',\n          text: `摆出了 ${photo.poseName} 姿势，相似度 ${photo.score}%！`,\n          files: [file]\n        });\n        console.log('Photo shared successfully');\n      } catch (error) {\n        console.log('Share cancelled or failed:', error);\n      }\n    } else {\n      // Fallback: copy image data to clipboard\n      try {\n        await navigator.clipboard.writeText(`AI Pose Coach - ${photo.poseName} (${photo.score}%)`);\n        console.log('Photo info copied to clipboard');\n      } catch (error) {\n        console.log('Clipboard access failed:', error);\n      }\n    }\n  };\n\n  const formatDate = (timestamp: number) => {\n    return new Date(timestamp).toLocaleString('zh-CN', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return 'bg-pose-green text-white';\n    if (score >= 60) return 'bg-warning-amber text-white';\n    return 'bg-destructive text-white';\n  };\n\n  if (photos.length === 0) {\n    return (\n      <div className=\"p-8 text-center\">\n        <Camera className=\"w-16 h-16 mx-auto mb-4 text-muted-foreground\" />\n        <h3 className=\"text-lg font-medium mb-2\">还没有照片 / No Photos Yet</h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          开始拍摄来创建你的姿势作品集\n        </p>\n        <p className=\"text-xs text-muted-foreground\">\n          Start shooting to create your pose portfolio\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"p-4 border-b\">\n        <h2 className=\"text-xl font-semibold mb-1\">照片相册 / Photo Gallery</h2>\n        <p className=\"text-sm text-muted-foreground\">\n          {photos.length} 张照片 / {photos.length} photos\n        </p>\n      </div>\n      \n      <ScrollArea className=\"flex-1 p-4\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {photos.map(photo => (\n            <Card key={photo.id} className=\"overflow-hidden hover-elevate\">\n              <div className=\"relative\">\n                {/* Photo thumbnail */}\n                <div \n                  className=\"aspect-[3/4] bg-muted cursor-pointer\"\n                  onClick={() => setSelectedPhoto(photo)}\n                >\n                  <img \n                    src={photo.imageData}\n                    alt={photo.poseName}\n                    className=\"w-full h-full object-cover\"\n                    data-testid={`img-photo-${photo.id}`}\n                  />\n                </div>\n                \n                {/* Score badge */}\n                <div className=\"absolute top-2 right-2\">\n                  <Badge className={getScoreColor(photo.score)}>\n                    {photo.score}%\n                  </Badge>\n                </div>\n                \n                {/* Quick actions */}\n                <div className=\"absolute bottom-2 right-2 flex gap-1\">\n                  <Button\n                    size=\"icon\"\n                    variant=\"secondary\"\n                    className=\"w-8 h-8 bg-black/50 hover:bg-black/70 backdrop-blur-sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      sharePhoto(photo);\n                    }}\n                    data-testid={`button-share-${photo.id}`}\n                  >\n                    <Share2 className=\"w-3 h-3\" />\n                  </Button>\n                  <Button\n                    size=\"icon\"\n                    variant=\"secondary\"\n                    className=\"w-8 h-8 bg-black/50 hover:bg-black/70 backdrop-blur-sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      downloadPhoto(photo);\n                    }}\n                    data-testid={`button-download-${photo.id}`}\n                  >\n                    <Download className=\"w-3 h-3\" />\n                  </Button>\n                </div>\n              </div>\n              \n              <CardContent className=\"p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"font-medium text-sm line-clamp-1\">\n                    {photo.poseName.split(' / ')[0]}\n                  </h4>\n                  <div className=\"flex items-center text-xs text-muted-foreground gap-1\">\n                    <Calendar className=\"w-3 h-3\" />\n                    {formatDate(photo.timestamp)}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => onRetakePhoto(photo.poseId)}\n                    data-testid={`button-retake-${photo.id}`}\n                  >\n                    <Target className=\"w-3 h-3 mr-1\" />\n                    重拍\n                  </Button>\n                  \n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => onDeletePhoto(photo.id)}\n                    className=\"text-destructive hover:text-destructive\"\n                    data-testid={`button-delete-${photo.id}`}\n                  >\n                    <Trash2 className=\"w-3 h-3\" />\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </ScrollArea>\n      \n      {/* Photo Detail Modal */}\n      <Dialog open={!!selectedPhoto} onOpenChange={() => setSelectedPhoto(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          {selectedPhoto && (\n            <>\n              <DialogHeader>\n                <DialogTitle className=\"flex items-center justify-between\">\n                  <span>{selectedPhoto.poseName}</span>\n                  <Badge className={getScoreColor(selectedPhoto.score)}>\n                    {selectedPhoto.score}% 相似度\n                  </Badge>\n                </DialogTitle>\n              </DialogHeader>\n              \n              <div className=\"space-y-4\">\n                {/* Full size image */}\n                <div className=\"relative\">\n                  <img \n                    src={selectedPhoto.imageData}\n                    alt={selectedPhoto.poseName}\n                    className=\"w-full h-auto rounded-md\"\n                    data-testid=\"img-photo-detail\"\n                  />\n                </div>\n                \n                {/* Photo info */}\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"text-muted-foreground\">拍摄时间:</span>\n                    <p className=\"font-medium\">{new Date(selectedPhoto.timestamp).toLocaleString('zh-CN')}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-muted-foreground\">姿势相似度:</span>\n                    <p className=\"font-medium\">{selectedPhoto.score}%</p>\n                  </div>\n                </div>\n                \n                {/* Actions */}\n                <div className=\"flex gap-2 pt-4\">\n                  <Button \n                    onClick={() => downloadPhoto(selectedPhoto)}\n                    className=\"flex-1\"\n                    data-testid=\"button-download-detail\"\n                  >\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    下载照片\n                  </Button>\n                  <Button \n                    variant=\"outline\"\n                    onClick={() => sharePhoto(selectedPhoto)}\n                    className=\"flex-1\"\n                    data-testid=\"button-share-detail\"\n                  >\n                    <Share2 className=\"w-4 h-4 mr-2\" />\n                    分享照片\n                  </Button>\n                  <Button \n                    variant=\"outline\"\n                    onClick={() => {\n                      onRetakePhoto(selectedPhoto.poseId);\n                      setSelectedPhoto(null);\n                    }}\n                    data-testid=\"button-retake-detail\"\n                  >\n                    <Target className=\"w-4 h-4 mr-2\" />\n                    重新拍摄\n                  </Button>\n                </div>\n              </div>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"